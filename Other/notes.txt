







*
continue from where you left off

ivano
abc@gmail.com
abc

===








===
api backup:

# async def get_current_user(token: str = Depends(JWTBearer())) -> dict:
#     payload = decodeJWT(token)
#     if payload:
#         return payload
#     else:
#         raise HTTPException(status_code=401, detail="Invalid token or token has expired")


# @app.get("/new_page", response_class=HTMLResponse)
# async def new_page(
#     request: Request,
#     token: str = Query(...),
#     fullname: str = Query(...),
#     current_user: dict = Depends(get_current_user),
# ):
#     return templates.TemplateResponse("nbody2.html", {"request": request, "fullname": fullname})

# @app.get("/new_page2", response_class=HTMLResponse)
# async def new_page(
#     request: Request,
#     fullname: str = Query("Anonim"),
#     current_user: dict = Depends(get_current_user),
# ):
#     return templates.TemplateResponse("index.html", {"request": request, "fullname": fullname})





# route handlers

# @app.get("/", tags=["root"])
# async def read_root() -> dict:
#     return {"message": "Welcome to your blog!"}





# @app.get("/posts/{id}", tags=["posts"])
# async def get_single_post(id: int) -> dict:
#     if id > len(posts):
#         return {
#             "error": "No such post with the supplied ID."
#         }

#     for post in posts:
#         if post["id"] == id:
#             return {
#                 "data": post
#             }




# @app.post("/user/register", tags=["user"])
# async def user_register(user: UserSchema = Body(...)):
#     # Check if the user already exists
#     for existing_user in users:
#         if existing_user.email == user.email:
#             raise HTTPException(status_code=400, detail="User already exists")

#     users.append(user)  # Add user to the users list
#     return {"email": user.email}  # Return the email of the registered user

Описание проекта "Заметки":

Описание [Экран 1]

    Юзеры могут зарегатся в нашей системе на первом экране. 
    После того как они регаются происходит автоматический логин.

    Описание регистрации юзера: 
    3 поля.
    Полное имя:
    Эл. адрес:
    Пароль: 

    Так-же юзера могут входить в систему если они были зареганы заранее.
    2 поля
    Эл. адрес:
    Пароль:

Описание [Экран 2]
Сразу как заходим видим заметки пользователя.
Есть кнопка добавить заметку. 
Есть кнопка удалить заметку.

Лично у меня в вебе кнопка добавления заметки при нажатии трансформируется в поле для ввода и кнопку отправить справа.

Предполагаемая аудитория:
Нет такой. Над как можно больше людей захватить.